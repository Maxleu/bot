

import base64, codecs
magic = 'ZnJvbSB0ZWxldGhvbi5zeW5jIGltcG9ydCBUZWxlZ3JhbUNsaWVudApmcm9tIHRlbGV0aG9uLmVycm9ycy5ycGNlcnJvcmxpc3QgaW1wb3J0IFBob25lTnVtYmVyQmFubmVkRXJyb3IKaW1wb3J0IGNzdgppbXBvcnQgc3lzCmltcG9ydCBwaWNrbGUKaW1wb3J0IHJhbmRvbQppbXBvcnQgcHlmaWdsZXQKaW1wb3J0IG9zCmltcG9ydCBkYXRldGltZQpmcm9tIGNvbG9yYW1hIGltcG9ydCBpbml0LCBGb3JlLCBTdHlsZQpmcm9tIHRlbGV0aG9uLnRsLnR5cGVzIGltcG9ydCBVc2VyU3RhdHVzUmVjZW50bHkKZnJvbSB0ZWxldGhvbi50bC50eXBlcyBpbXBvcnQgVXNlclN0YXR1c1JlY2VudGx5LCBDaGFubmVsUGFydGljaXBhbnRzQWRtaW5zLCBVc2VyU3RhdHVzTGFzdE1vbnRoLCBVc2VyU3RhdHVzTGFzdFdlZWssIFVzZXJTdGF0dXNPZmZsaW5lLCBVc2VyU3RhdHVzT25saW5lCmZyb20gdGltZSBpbXBvcnQgc2xlZXAKZnJvbSB0ZWxldGhvbi50bC5mdW5jdGlvbnMuY2hhbm5lbHMgaW1wb3J0IEdldEZ1bGxDaGFubmVsUmVxdWVzdAppbXBvcnQgZGF0ZXRpbWUKCmluaXQoKQoKbGcgPSBGb3JlLkxJR0hUR1JFRU5fRVgKcnMgPSBGb3JlLlJFU0VUCnIgPSBGb3JlLlJFRAp3ID0gRm9yZS5XSElURQpjeSA9IEZvcmUuQ1lBTgpyID0gRm9yZS5SRUQKZyA9IEZvcmUuR1JFRU4KYiA9IEZvcmUuQkxVRQoKdG9kYXkgPSBkYXRldGltZS5kYXRldGltZS5ub3coKQp5ZXN0ZXJkYXkgPSB0b2RheSAtIGRhdGV0aW1lLnRpbWVkZWx0YShkYXlzPTEpCgppbmZvID0gbGcgKyAnKCcgKyB3ICsgJ2knICsgbGcgKyAnKScgKyBycwplcnJvciA9IGxnICsgJygnICsgciArICchJyArIGxnICsgJyknICsgcnMKc3VjY2VzcyA9IHcgKyAnKCcgKyBsZyArICcrJyArIHcgKyAnKScgKyBycwpJTlBVVCA9IGxnICsgJygnICsgY3kgKyAnficgKyBsZyArICcpJyArIHJzCmNvbG9ycyA9IFtsZywgdywgciwgY3ldCmRlZiBiYW5uZXIoKToKICAgIGYgPSBweWZpZ2xldC5GaWdsZXQoZm9udD0nc2xhbnQnKQogICAgbG9nbyA9IGYucmVuZGVyVGV4dCgnUk9CTyBURUxFR1JBTScpCiAgICBwcmludChyYW5kb20uY2hvaWNlKGNvbG9ycykgKyBsb2dvICsgcnMpCgpkZWYgY2xyKCk6CiAgICBpZiBvcy5uYW1lID09ICdudCc6CiAgICAgICAgb3Muc3lzdGVtKCdjbHMnKQogICAgZWxzZToKICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykKCmNscigpCmJhbm5lcigpCnByaW50KGYnICB7cn1WZXJzw6NvOiB7d30xLjAge3J9fCBBdXRvcjoge3d9QWxleGFuZHJlIEFndWlhcntyc31cbicpCmYgPSBvcGVuKCd2YXJzLnR4dCcsICdyYicpCmFjY3MgPSBbXQp3aGlsZSBUcnVlOgogICAgdHJ5OgogICAgICAgIGFjY3MuYXBwZW5kKHBpY2tsZS5sb2FkKGYpKQogICAgZXhjZXB0IEVPRkVycm9yOgogICAgICAgIGYuY2xvc2UoKQogICAgICAgIGJyZWFrCnByaW50KGYne0lOUFVUfXtjeX0gRXNjb2xoYSB1bWEgY29udGEgcGFyYSBleHRyYWlyIG9zIG1lbWJyb3M6XG4nKQppID0gMApmb3IgYWNjIGluIGFjY3M6CiAgICBwcmludChmJ3tsZ30oe3d9e2l9e2xnfSkge2FjY1syXX0nKQogICAgaSArPSAxCmluZCA9IGludChpbnB1dChmJ1xue0lOUFVUfXtjeX0gRGlnaXRlIGEgZXNjb2xoYTogJykpCmFwaV9pZCA9IGFjY3NbaW5kXVswXQphcGlfaGFzaCA9IGFjY3NbaW5kXVsxXQpwaG9uZSA9IGFjY3NbaW5kXVsyXQpncm91cF9uYW1lID0gaW5wdXQoZiJEaWdpdGUgbyBsaW5rIGRvIGdydXBvOiB7cn0iKQpjID0gVGVsZWdyYW1DbGllbnQoZidzZXNzaW9uc1xce3Bob25lfScsIGFwaV9pZCwgYXBpX2hhc2gpCmMuY29ubmVjdCgpCmlmIG5vdCBjLmlzX3VzZXJfYXV0aG9yaXplZCgpOgogICAgdHJ5OgogICAgICAgIGMuc2VuZF9jb2RlX3JlcXVlc3QocGhvbmUpCiAgICAgICAgY29kZSA9IGlucHV0KGYne0lOUFVUfXtsZ30gRGlnaXRlIG8gY8OzZGlnbyBkZSBhY2Vzc28ge3d9e3Bob25lfXtyfTogJykKICAgICAgICBjLnNpZ25faW4ocGhvbmUsIGNvZGUpCiAgICBleGNlcHQgUGhvbmVOdW1iZXJCYW5uZWRFcnJvcjoKICAgICAgICBwcmludChmJ3tlcnJvcn17d317cGhvbmV9e3J9IEVzdMOhIGJhbmlkYSF7cnN9JykKICAgICAgICBwcmludChmJ3tlcnJvcn17bGd9IFJ1biB7d31tYW5hZ2VyLnB5e2xnfSB0byBmaWx0ZXIgdGhlbXtyc30nKQogICAgICAgIHN5cy5leGl0KCkKZ3JvdXAgPSBjLmdldF9lbnRpdHkoZ3JvdXBfbmFtZSkKdGFyZ2V0X2dycCA9ICJ0Lm1lLyIg'
love = 'XlOapz91pS9hLJ1yPtcwnT9cL2HtCFOcoaDbnJ5jqKDbMvWpoagfM31Qo21iVUMiL8BdVTqip3EupzyuVTEyVT9vqTIlVT9mVUImqpBupzyipm9poykhr3W9J3gwrK0jr3W9KKgfM30tIT9xo3ZtqKA1j6SlnJ9mKT57pa1or2A5sGS7pa1qr2kasFOIp3KQbKWco3ZtLKEcqz9mXT9hoTyhMFObo2cyVTHto250MJ0cKT57pa1or2A5sGW7pa1qr2kasFOIp3KQbKWco3ZtLKEcqz9mVT5uVZB6oUEcoJRtp2IgLJ5uKT57pa1or2A5sGA7pa1qr2kasFOIp3KQbKWco3ZtLKEcqz9mVT5iVZB6oUEcoJ8topBdp1khr3W9J3gwrK00r3W9KKgfM30tIKA1j6SlnJ9mVT7Qb28tLKEcqz9mXT7Qb28tLKEcqz8toz8tj7cfqTygolOgj6cmXFOpoykhH3IuVTImL29fnTR6VPVcXDcgMJ1vMKWmVQ0tJ10XoJIgLzIlplN9VTZhnKEypy9jLKW0nJAcpTShqUZbM3WiqKNfVTSaM3Wyp3AcqzH9IUW1MFxXPzAbLJ5hMJksMaIfoS9cozMiVQ0tLluUMKETqJkfD2uuoz5yoSWypKIyp3DbM3WiqKNcXDcwo250VQ0tL2uuoz5yoS9zqJkfK2yhMz8hMaIfoS9wnTS0YaOupaEcL2yjLJ50p19wo3IhqNbXMTIzVUqlnKEyXTqlo3IjYT1yoJWypvx6PvNtVPOcMvOgMJ1vMKVhqKAypz5uoJH6PvNtVPNtVPNtqKAypz5uoJHtCFOgMJ1vMKVhqKAypz5uoJHXVPNtVTIfp2H6PvNtVPNtVPNtqKAypz5uoJHtCFNaWjbtVPNtnJLtnKAcoaA0LJ5wMFugMJ1vMKVhp3EuqUImYSImMKWGqTS0qKACMzMfnJ5yXGbXVPNtVPNtVPO3pzy0MKVhq3WcqTIlo3pbJ3ImMKWhLJ1yYPOgMJ1vMKVhnJDfVT1yoJWypv5uL2Ayp3AsnTSmnPjtM3WiqKNhqTy0oTHfVTqlo3IjYzyxYT1yoJWypv5mqTS0qKZhq2SmK29hoTyhMI0cPvNtVPOyoUAyBtbtVPNtVPNtVUqlnKEypv53pzy0MKWiqluoqKAypz5uoJHfVT1yoJWypv5cMPjtoJIgLzIlYzSwL2Imp19bLKAbYPOapz91pP50nKEfMFjtM3WiqKNhnJDfqUyjMFugMJ1vMKVhp3EuqUImXF5sK25uoJIsK10cPtcuMT1coy9wnT9cL2HtCFOcoaO1qPuzVagfM31Jo2CQdvOao3A0LKWcLFOxMFO0MKVtLJEgnJ5cp3ElLJEipzImVTIgVUIgVTSlpKIcqz8tD1AJVUAypTSlLJEiClO7paA9J3xioy0tr2kasFVcPzyzVTSxoJyhK2Abo2ywMFN9CFNvrFVto3VtLJEgnJ5sL2uinJAyVQ09VPWMVwbXVPNtVUqcqTtto3OyovtvoJIgLzIlp1kpLJEgnJ5mYzAmqvVfVPW3VvjtMJ5wo2Ecozp9W1IHEv04WlxtLKZtMwbXVPNtVPNtVPO3pzy0MKVtCFOwp3Lhq3WcqTIlXTLfVTEyoTygnKEypw0vYPVfVTkcozI0MKWgnJ5uqT9lCFWpovVcPvNtVPNtVPNtq3WcqTIlYaqlnKEypz93XSfaqKAypz5uoJHaYPNaqKAypvOcMPpfVPquL2Ayp3ZtnTSmnPpfVPqapz91pPpfVPqapz91pPOcMPpfW3A0LKE1plqqXDbtVPNtVPNtVTMipvOgMJ1vMKVtnJ4tLl5cqTIlK3OupaEcL2yjLJ50pluapz91pPjtMzyfqTIlCHAbLJ5hMJkDLKW0nJAcpTShqUAOMT1coaZcBvNtVPNXVPNtVPNtVPNtVPNtnJLtoz90VT1yoJWypv5vo3D6PvNtVPNtVPNtVPNtVPNtVPO3pzy0MFuapz91pPkgMJ1vMKVcPzLhL2kip2HbXDcjpzyhqPuzVagfM30vXDc3nKEbVT9jMJ4bVz1yoJWypaApKT1yoJWypaZhL3A2VvjtVapvYPOyozAiMTyhMm0aIIETYGtaXFOuplOzBtbtVPNtq3WcqTIlVQ0tL3A2YaqlnKEypvuzYPOxMJkcoJy0MKV9VvjvYPOfnJ5yqTIloJyhLKEipw0vKT4vXDbtVPNtq3WcqTIlYaqlnKEypz93XSfaqKAypz5uoJHaYPNaqKAypvOcMPpfVPquL2Ayp3ZtnTSmnPpfVPqapz91pPpfVPqapz91pPOcMPpfW3A0LKE1plqqXDbtVPNtnJLtL2uinJAyVQ09VQN6PvNtVPNtVPNtqUW5BtbtVPNtVPNtVPNtVPOzo3VtnJ5xMKtfoJIgLzIlVTyhVTIhqJ1ypzS0MFugMJ1vMKWmXGbXVPNtVPNtVPNtVPNtVPNtVUOlnJ50XTLvr2yhMTI4XmS9Y3gwo250sFVfVTIhMQ0vKUVvXDbtVPNtVPNtVPNtVPNtVPNtnJLtnJ5xMKtyZGNjVQ09VQN6PvNtVPNtVPNtVPNtVPNtVPNtVPNtp2kyMKNbZlxXVPNtVPNtVPNtVPNtVPNtVTyzVT5iqPOgMJ1vMKVhLz90BtbtVPNtVPNtVPNtVPNtVPNtVPNtVUqlnKEyXTqlo3IjYT1yoJWypvxtVPNtVPNtVPNtVPNtVPNtVPNtPvNtVPNtVPNtMKuwMKO0BtbtVPNtVPNtVPNtVPOjpzyhqPtvKT5HnTIlMFO3LKZtLFOToT9iMSqunKESpaWipvjtLaI0VTAbMJAeVT1yoJWypaZhL3A2YvOAo3WyVUEbLJ4tBGHyWFOiMvOgMJ1vMKWmVUAbo3IfMPOvMFOuoUWyLJE5VTSxMTIxYvVcPvNtVPOyoTyzVTAbo2ywMFN9CFNkBtbtVPNtVPNtVUElrGbXVPNtVPNtVPNtVPNtMz9l'
god = 'IGluZGV4LG1lbWJlciBpbiBlbnVtZXJhdGUobWVtYmVycyk6CiAgICAgICAgICAgICAgICBwcmludChmIntpbmRleCsxfS97Y29udH0iLCBlbmQ9IlxyIikKICAgICAgICAgICAgICAgIGlmIGluZGV4JTEwMCA9PSAwOgogICAgICAgICAgICAgICAgICAgIHNsZWVwKDMpCiAgICAgICAgICAgICAgICBpZiBub3QgbWVtYmVyLmJvdDoKICAgICAgICAgICAgICAgICAgICBpZiBpc2luc3RhbmNlKG1lbWJlci5zdGF0dXMsIChVc2VyU3RhdHVzUmVjZW50bHksVXNlclN0YXR1c09ubGluZSkpOgogICAgICAgICAgICAgICAgICAgICAgICB3cml0ZShncm91cCxtZW1iZXIpCiAgICAgICAgICAgICAgICAgICAgZWxpZiBpc2luc3RhbmNlKG1lbWJlci5zdGF0dXMsVXNlclN0YXR1c09mZmxpbmUpOgogICAgICAgICAgICAgICAgICAgICAgICBkID0gbWVtYmVyLnN0YXR1cy53YXNfb25saW5lICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgdG9kYXlfdXNlciA9IGQuZGF5ID09IHRvZGF5LmRheSBhbmQgZC5tb250aCA9PSB0b2RheS5tb250aCBhbmQgZC55ZWFyID09IHRvZGF5LnllYXIKICAgICAgICAgICAgICAgICAgICAgICAgeWVzdGVyZGF5X3VzZXIgPSBkLmRheSA9PSB5ZXN0ZXJkYXkuZGF5IGFuZCBkLm1vbnRoID09IHllc3RlcmRheS5tb250aCBhbmQgZC55ZWFyID09IHllc3RlcmRheS55ZWFyCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHRvZGF5X3VzZXIgb3IgeWVzdGVyZGF5X3VzZXI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3cml0ZShncm91cCxtZW1iZXIpCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICBwcmludCgiXG5UaGVyZSB3YXMgYSBGbG9vZFdhaXRFcnJvciwgYnV0IGNoZWNrIG1lbWJlcnMuY3N2LiBNb3JlIHRoYW4gOTUlJSBvZiBtZW1iZXJzIHNob3VsZCBiZSBhbHJlYWR5IGFkZGVkLiIpCiAgICBlbGlmIGNob2ljZSA9PSAyOgogICAgICAgIHRyeToKICAgICAgICAgICAgZm9yIGluZGV4LG1lbWJlciBpbiBlbnVtZXJhdGUobWVtYmVycyk6CiAgICAgICAgICAgICAgICBwcmludChmIntpbmRleCsxfS97Y29udH0iLCBlbmQ9IlxyIikKICAgICAgICAgICAgICAgIGlmIGluZGV4JTEwMCA9PSAwOgogICAgICAgICAgICAgICAgICAgIHNsZWVwKDMpCiAgICAgICAgICAgICAgICBpZiBub3QgbWVtYmVyLmJvdDoKICAgICAgICAgICAgICAgICAgICBpZiBpc2luc3RhbmNlKG1lbWJlci5zdGF0dXMsIChVc2VyU3RhdHVzUmVjZW50bHksVXNlclN0YXR1c09ubGluZSxVc2VyU3RhdHVzTGFzdFdlZWspKToKICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGUoZ3JvdXAsbWVtYmVyKQogICAgICAgICAgICAgICAgICAgIGVsaWYgaXNpbnN0YW5jZShtZW1iZXIuc3RhdHVzLFVzZXJTdGF0dXNPZmZsaW5lKToKICAgICAgICAgICAgICAgICAgICAgICAgZCA9IG1lbWJlci5zdGF0dXMud2FzX29ubGluZQogICAgICAgICAgICAgICAgICAgICAgICBmb3IgaSBpbiByYW5nZSgwLDcpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudF9kYXkgPSB0b2RheSAtIGRhdGV0aW1lLnRpbWVkZWx0YShkYXlzPWkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3JyZWN0X3VzZXIgPSBkLmRheSA9PSBjdXJyZW50X2RheS5kYXkgYW5kIGQubW9udGggPT0gY3VycmVudF9kYXkubW9udGggYW5kIGQueWVhciA9PSBjdXJyZW50X2RheS55ZWFyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBjb3JyZWN0X3VzZXI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGUoZ3JvdXAsbWVtYmVyKQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgcHJpbnQoIlxuVGhlcmUgd2FzIGEgRmxvb2RXYWl0RXJyb3IsIGJ1dCBjaGVjayBtZW1iZXJzLmNzdi4gTW9yZSB0aGFuIDk1JSUgb2YgbWVtYmVycyBzaG91bGQgYmUgYWxyZWFkeSBhZGRlZC4iKQogICAgZWxpZiBjaG9pY2UgPT0gMzoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGZvciBpbmRleCxtZW1iZXIgaW4gZW51bWVyYXRlKG1lbWJlcnMpOgogICAgICAgICAgICAgICAgcHJpbnQoZiJ7aW5kZXgrMX0ve2NvbnR9IiwgZW5kPSJcciIpCiAgICAgICAgICAgICAgICBpZiBpbmRleCUxMDAgPT0gMDoKICAgICAgICAgICAgICAgICAgICBzbGVlcCgzKQogICAgICAgICAgICAgICAgaWYgbm90IG1lbWJlci5ib3Q6CiAgICAgICAgICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShtZW1iZXIu'
destiny = 'p3EuqUImYPNbIKAypyA0LKE1p1WyL2IhqTk5YSImMKWGqTS0qKACozkcozHfIKAypyA0LKE1p0kup3EKMJIeYSImMKWGqTS0qKAZLKA0GJ9hqTtcXGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtq3WcqTHbM3WiqKNfoJIgLzIlXDbtVPNtVPNtVPNtVPNtVPNtVPNtVTIfnJLtnKAcoaA0LJ5wMFugMJ1vMKVhp3EuqUImYSImMKWGqTS0qKACMzMfnJ5yXGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtMPN9VT1yoJWypv5mqTS0qKZhq2SmK29hoTyhMDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOzo3VtnFOcovOlLJ5aMFtjYQZjXGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTA1paWyoaEsMTS5VQ0tqT9xLKxtYFOxLKEyqTygMF50nJ1yMTIfqTRbMTS5pm1cXDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtL29lpzIwqS91p2IlVQ0tMP5xLKxtCG0tL3IlpzIhqS9xLKxhMTS5VTShMPOxYz1ioaEbVQ09VTA1paWyoaEsMTS5Yz1ioaEbVTShMPOxYayyLKVtCG0tL3IlpzIhqS9xLKxhrJIuptbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtnJLtL29lpzIwqS91p2IlBtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUqlnKEyXTqlo3IjYT1yoJWypvxXVPNtVPNtVPOyrTAypUD6PvNtVPNtVPNtVPNtVUOlnJ50XPWpoyEbMKWyVUquplOuVRMfo29xI2ScqRIlpz9lYPOvqKDtL2uyL2ftoJIgLzIlpl5wp3LhVR1ipzHtqTuuovN5AFHyVT9zVT1yoJWypaZtp2uiqJkxVTWyVTSfpzIuMUxtLJExMJDhVvxXVPNtVTIfnJLtL2uinJAyVQ09VQD6PvNtVPNtVPNtqUW5BtbtVPNtVPNtVPNtVPOuoTksqKAypaZtCFOoKDbtVPNtVPNtVPNtVPOuL3EcqzIsqKAypaZtCFOoKDbtVPNtVPNtVPNtVPOzo3VtnJ5xMKtfoJIgLzIlVTyhVTIhqJ1ypzS0MFugMJ1vMKWmXGbXVPNtVPNtVPNtVPNtVPNtVUOlnJ50XTLvr2yhMTI4XmS9Y3gwo250sFVfVTIhMQ0vKUVvXDbtVPNtVPNtVPNtVPNtVPNtLJkfK3ImMKWmYzSjpTIhMPugMJ1vMKVcPvNtVPNtVPNtVPNtVPNtVPOcMvOcozEyrPHkZQNtCG0tZQbXVPNtVPNtVPNtVPNtVPNtVPNtVPOmoTIypPtmXDbtVPNtVPNtVPNtVPNtVPNtnJLtoz90VT1yoJWypv5vo3D6PvNtVPNtVPNtVPNtVPNtVPNtVPNtnJLtnKAcoaA0LJ5wMFugMJ1vMKVhp3EuqUImYPNbIKAypyA0LKE1p1WyL2IhqTk5YSImMKWGqTS0qKACozkcozHfIKAypyA0LKE1p0kup3EKMJIeYSImMKWGqTS0qKAZLKA0GJ9hqTtcXGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtLJA0nKMyK3ImMKWmYzSjpTIhMPugMJ1vMKVcPvNtVPNtVPNtVPNtVPNtVPNtVPNtMJkcMvOcp2yhp3EuozAyXT1yoJWypv5mqTS0qKZfIKAypyA0LKE1p09zMzkcozHcBtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOxVQ0toJIgLzIlYaA0LKE1pl53LKAso25fnJ5yPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTMipvOcVTyhVUWuozqyXQNfZmNcBtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtL3IlpzIhqS9xLKxtCFO0o2EurFNgVTEuqTI0nJ1yYaEcoJIxMJk0LFuxLKymCJxcPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOwo3WlMJA0K3ImMKVtCFOxYzEurFN9CFOwqKWlMJ50K2EurF5xLKxtLJ5xVTDhoJ9hqTttCG0tL3IlpzIhqS9xLKxhoJ9hqTttLJ5xVTDhrJIupvN9CFOwqKWlMJ50K2EurF55MJSlPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOcMvOwo3WlMJA0K3ImMKV6VPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTSwqTy2MI91p2Ilpl5upUOyozDboJIgLzIlXDbtVPNtVPNtVPNtVPOzo3VtoJIgLzIlVTyhVTSfoS91p2IlpmbXVPNtVPNtVPNtVPNtVPNtVTyzVT1yoJWypvOho3DtnJ4tLJA0nKMyK3ImMKWmBtbtVPNtVPNtVPNtVPNtVPNtVPNtVUqlnKEyXTqlo3IjYT1yoJWypvxXVPNtVPNtVPOyrTAypUD6PvNtVPNtVPNtVPNtVUOlnJ50XTLvKT57pa1HnTIlMFO3LKZtLFOToT9iMSqunKESpaWipvjtLaI0VTAbMJAeVT1yoJWypaZhL3A2YvOAo3WyVUEbLJ4tBGHyWFOiMvOgMJ1vMKWmVUAbo3IfMPOvMFOuoUWyLJE5VTSxMTIxYvVcPvNtVPNtVPNtVPNtVPNtVPNXMv5woT9mMFtcPtcjpzyhqPuzVykhr2kasIImqpBupzyiplOmLJk2o3Ztoz8tLKWkqJy2olOwp3Lhr3WmsIkhVvxXL2klXPxXLzShozIlXPxXq2y0nPOipTIhXPq0LKWaMKEsM3WjYaE4qPpfVPq3WlxtLKZtMwbXVPNtVTLhq3WcqTHbqTSlM2I0K2qlpPxXMv5woT9mMFtcPaA5pl5yrTy0XPxXPt=='
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))